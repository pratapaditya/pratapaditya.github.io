<svg  xmlns="http://www.w3.org/2000/svg" width="100%" height="auto">
  <defs>
    <linearGradient id="rulerGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" stop-color="#f0f0f0" />
      <stop offset="100%" stop-color="#e0e0e0" />
    </linearGradient>
    <style type="text/css">
      .ruler-body {
        fill: url(#rulerGradient);
        stroke: #333;
        stroke-width: 1;
      }
      .major-tick {
        stroke: #333;
        stroke-width: 1;
      }
      .minor-tick {
        stroke: #666;
        stroke-width: 0.5;
      }
      .label {
        font-size: 10px;
        fill: #333;
        text-anchor: middle;
      }
    </style>
  </defs>

  <rect x="10" y="10" width="480" height="20" class="ruler-body" />

  <g id="ticks">
    <path id="majorTicks" d="" class="major-tick" />
    <path id="minorTicks" d="" class="minor-tick" />
    <g id="labels"></g>
  </g>

  <script type="text/javascript">
    <![CDATA[
      const rulerWidth = 480;
      const rulerStartX = 10;
      const tickHeightMajor = 15;
      const tickHeightMinor = 10;
      const labelOffsetY = 35;

      let majorTickPath = "";
      let minorTickPath = "";
      let labelsGroup = document.getElementById('labels');

      for (let i = 0; i <= rulerWidth; i += 10) {
        const x = rulerStartX + i;
        if (i % 50 === 0) {
          majorTickPath += `M${x},${30 - tickHeightMajor} V${30}`;
          const label = document.createElementNS("http://www.w3.org/2000/svg", 'text');
          label.setAttribute('x', x);
          label.setAttribute('y', labelOffsetY);
          label.setAttribute('class', 'label');
          label.textContent = i / 10; // Assuming each 10 units is 1 unit on the ruler
          labelsGroup.appendChild(label);
        } else {
          minorTickPath += `M${x},${30 - tickHeightMinor} V${30}`;
        }
      }

      document.getElementById('majorTicks').setAttribute('d', majorTickPath);
      document.getElementById('minorTicks').setAttribute('d', minorTickPath);
    ]]>
  </script>
</svg>